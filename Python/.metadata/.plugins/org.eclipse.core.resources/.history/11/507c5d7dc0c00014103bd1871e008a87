from neurons import *
from neuron import Neuron
class Network:
    def __init__(self, layers, connectionType = None, activations = None):
        #TODO
        if( connectionType == None ):
            pass
        if( activations == None):
            pass
        if (len(layers) < 2):
            raise AttributeError("Not enough layers specified")
        if(len(activations) != len(layers)):
            raise AttributeError("Activation functions do not line up to layers")
        self.activations = activations
        self.bias = BiasNeuron()
        layerCount = len(layers)
        
        neurons = list(layerCount)
        for layer in range(0, layerCount):
            count = layers[layer]
            
            neurons[layer] = Neuron[count]
            
            for k in range(0, count):
                type = None
                if(layer == 0):
                    type = InputNeuron()
                elif(layer == layerCount -1):
                    type = OutputNeuron()
                else:
                    type = Neuron()
                neurons[layer][k] = type